name: Build Package

env:
  TRAVIS: "true"
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

  workflow_dispatch:

jobs:
  build_package:
    name: Run test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PGVERSION:
          - 10
          - 11
          - 12
          - 13
          - 14
        TEST:
          - multi
          - single
          - monitor
          - ssl
        include:
          - PGVERSION: 14
            TEST: tablespaces
            DOCKERTEST: true
          - PGVERSION: 14
            TEST: linting
            LINTING: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
            echo "PGVERSION=${{ matrix.PGVERSION }}" >> $GITHUB_ENV
            echo "TEST=${{ matrix.TEST }}" >> $GITHUB_ENV
            echo "DOCKERTEST=${{ matrix.DOCKERTEST }}" >> $GITHUB_ENV
            echo "LINTING=${{ matrix.LINTING }}" >> $GITHUB_ENV
            echo "TRAVIS_BUILD_DIR=$(pwd)" >> $GITHUB_ENV

      - name: Clone and install tools branch
        run: |
          gcc --version
          git clone -b v0.7.22 --depth 1 https://github.com/citusdata/tools.git ../tools
          sudo make -C ../tools install

      - name: Pre Install steps
        run: |
          if [ -z "${LINTING}" ]; then setup_apt; fi
          if [ -z "${LINTING}" ]; then nuke_pg; fi
          python --version
          python3 --version
          sudo apt-get install liblz4-1 liblz4-dev bridge-utils python3-pip python3-nose python3-psycopg2 libxslt1-dev
          sudo apt-get install libkrb5-dev python3-setuptools
          sudo -H pip3 install pyroute2>=0.5.17
          pip3 install --user black

      - name: Install steps
        run: |
         if [ -n "${LINTING}" ]; then install_uncrustify; fi
         if [ -n "${LINTING}" ]; then rm -rf uncrustify*; fi
         if [ -z "${LINTING}" ]; then install_pg; fi
         if [ -z "${LINTING}" ]; then install_custom_pg; fi
         env
         if [ -z "${LINTING}" ]; then pg_config; fi
         if [ -z "${LINTING}" ]; then PATH=`pg_config --bindir`:$PATH which pg_ctl; fi

      - name: Script steps
        timeout-minutes: 15
        run: |
          echo "Travis build dir: ${TRAVIS_BUILD_DIR}"
          if [ -n "${LINTING}" ]; then citus_indent --check; fi
          if [ -n "${LINTING}" ]; then black --check .; fi
          if [ -n "${LINTING}" ]; then ci/banned.h.sh; fi
          if [ -z "${LINTING}" ]; then make -j5 CFLAGS=-Werror; fi
          if [ -z "${LINTING}" ]; then sudo make install; fi
          if [ -z "${LINTING}" ]; then PATH=`pg_config --bindir`:$PATH make test; fi
