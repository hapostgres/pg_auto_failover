sudo: required
dist: focal
language: c
python:
  - "3.7"
cache:
  apt: true
  directories:
  - /home/travis/postgresql
matrix:
  fast_finish: true
  include:
    - env: PGVERSION=10 TEST=multi
    - env: PGVERSION=11 TEST=multi
    - env: PGVERSION=12 TEST=multi
    - env: PGVERSION=13 TEST=multi
    - env: PGVERSION=14 TEST=multi
    - env: PGVERSION=10 TEST=single
    - env: PGVERSION=11 TEST=single
    - env: PGVERSION=12 TEST=single
    - env: PGVERSION=13 TEST=single
    - env: PGVERSION=14 TEST=single
    - env: PGVERSION=10 TEST=monitor
    - env: PGVERSION=11 TEST=monitor
    - env: PGVERSION=12 TEST=monitor
    - env: PGVERSION=13 TEST=monitor
    - env: PGVERSION=14 TEST=monitor
    - env: PGVERSION=10 TEST=ssl
    - env: PGVERSION=11 TEST=ssl
    - env: PGVERSION=12 TEST=ssl
    - env: PGVERSION=13 TEST=ssl
    - env: PGVERSION=14 TEST=ssl
    - env: LINTING=true
  allow_failures:
    - env: PGVERSION=14 TEST=multi
    - env: PGVERSION=14 TEST=single
    - env: PGVERSION=14 TEST=monitor
    - env: PGVERSION=14 TEST=ssl
before_install:
  - git clone -b v0.7.18 --depth 1 https://github.com/citusdata/tools.git
  - sudo make -C tools install
  - 'if [ -z "$LINTING" ]; then setup_apt; fi'
  - 'if [ -z "$LINTING" ]; then nuke_pg; fi'
  - python --version
  - python3 --version
  - sudo apt-get install liblz4-1
  - sudo apt-get install liblz4-dev
  - sudo apt-get install bridge-utils
  - sudo apt-get install python3-pip
  - sudo apt-get install python3-nose
  - sudo apt-get install python3-psycopg2
  - sudo apt-get install python3-setuptools
  - sudo -H pip3 install pyroute2>=0.5.17
  - pip3 install --user black
install:
  - 'if [ -n "$LINTING" ]; then install_uncrustify; fi'
  # cleanup uncrustify build files
  - 'if [ -n "$LINTING" ]; then rm -rf uncrustify*; fi'
  - 'if [ -z "$LINTING" ]; then install_pg; fi'
  - 'if [ -z "$LINTING" ]; then install_custom_pg; fi'
  - env
  - 'if [ -z "$LINTING" ]; then pg_config; fi'
  - 'if [ -z "$LINTING" ]; then PATH=`pg_config --bindir`:$PATH which pg_ctl; fi'
script:
  - 'if [ -n "$LINTING" ]; then citus_indent --check; fi'
  - 'if [ -n "$LINTING" ]; then black --check .; fi'
  - 'if [ -n "$LINTING" ]; then ci/banned.h.sh; fi'
  - 'if [ -z "$LINTING" ]; then make -j5 CFLAGS=-Werror; fi'
  - 'if [ -z "$LINTING" ]; then sudo make install; fi'
  - 'if [ -z "$LINTING" ]; then PATH=`pg_config --bindir`:$PATH make test; fi'
